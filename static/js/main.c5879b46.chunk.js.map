{"version":3,"sources":["components/Section/Section.js","components/ButtonFeedback/ButtonFeedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App/App.js","index.js","components/Statistics/Statistic.module.css","components/ButtonFeedback/Button.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","className","styles","button","onClick","Statistics","total","goodPercentage","good","neutral","bad","item","Notification","message","App","state","Increment","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBC6BQC,EAhCS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLC,KAAMF,EACNG,UAAWC,IAAOC,OAClBC,QAASR,EALX,SAOGE,GANIA,S,gBCiBAO,EAtBI,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC1D,OACE,mCACE,+BACE,qBAAIT,UAAWC,IAAOS,KAAtB,oBAAoCH,KACpC,qBAAIP,UAAWC,IAAOS,KAAtB,uBAAuCF,KACvC,qBAAIR,UAAWC,IAAOS,KAAtB,mBAAmCD,KACnC,qBAAIT,UAAWC,IAAOS,KAAtB,qBAAqCL,KACrC,qBAAIL,UAAWC,IAAOS,KAAtB,iCAAiDJ,EAAjD,cCHOK,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCoE3BC,E,4MAhEbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,UAAY,SAACC,GACX,EAAKC,UAAS,SAACC,GACb,OAAO,eAAGF,EAAEG,OAAOpB,KAAOmB,EAAUF,EAAEG,OAAOpB,MAAQ,O,EAmBzDqB,mBAAqB,WACnB,OAAO,EAAKN,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAG3DY,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKT,MAAMP,KAAO,EAAKa,qBAAwB,M,4CAGpE,WACE,MAA+BI,KAAKV,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASlB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEG,QAAS+B,OAAOC,KAAKF,KAAKV,OAC1BnB,gBAAiB6B,KAAKT,cAI1B,cAAC,EAAD,CAASxB,MAAO,aAAhB,SACGiC,KAAKJ,qBACJ,cAAC,EAAD,CACEf,MAAOmB,KAAKJ,qBACZd,eAAgBkB,KAAKH,kCACrBd,KAAMA,EACNC,QAASA,EACTC,IAAKA,IAGP,cAAC,EAAD,CAAcG,QAAS,+B,GAzDjBe,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,0B,kBCAzBD,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.c5879b46.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Button.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          key={option}\n          type=\"button\"\n          name={option}\n          className={styles.button}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n      {/* <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\n        good\n      </button>\n      <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\n        neutral\n      </button>\n      <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\n        bad\n      </button> */}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Statistic.module.css\";\n\nconst Statistics = ({ total, goodPercentage, good, neutral, bad }) => {\n  return (\n    <>\n      <ul>\n        <li className={styles.item}>good : {good}</li>\n        <li className={styles.item}>neutral : {neutral}</li>\n        <li className={styles.item}>bad : {bad}</li>\n        <li className={styles.item}>Total : {total}</li>\n        <li className={styles.item}>Positive feedback : {goodPercentage} %</li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  total: PropTypes.number.isRequired,\n  goodPercentage: PropTypes.number.isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Section from \"../Section\";\nimport FeedbackOptions from \"../ButtonFeedback\";\nimport Statistics from \"../Statistics\";\nimport Notification from \"../Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  Increment = (e) => {\n    this.setState((prevState) => {\n      return { [e.target.name]: prevState[e.target.name] + 1 };\n    });\n    // if (e.target.name === \"good\") {\n    //   this.setState((prevState) => ({\n    //     good: prevState.good + 1,\n    //   }));\n    // }\n    // if (e.target.name === \"neutral\") {\n    //   this.setState((prevState) => ({\n    //     neutral: prevState.neutral + 1,\n    //   }));\n    // }\n    // if (e.target.name === \"bad\") {\n    //   this.setState((prevState) => ({\n    //     bad: prevState.bad + 1,\n    //   }));\n    // }\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.Increment}\n          />\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          {this.countTotalFeedback() ? (\n            <Statistics\n              total={this.countTotalFeedback()}\n              goodPercentage={this.countPositiveFeedbackPercentage()}\n              good={good}\n              neutral={neutral}\n              bad={bad}\n            />\n          ) : (\n            <Notification message={\"No feedback given\"} />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistic_item__K3inM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Rx5e\"};"],"sourceRoot":""}